// Code generated by MockGen. DO NOT EDIT.
// Source: app/game/wordbook.go

// Package game is a generated GoMock package.
package game

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWordBook is a mock of WordBook interface.
type MockWordBook struct {
	ctrl     *gomock.Controller
	recorder *MockWordBookMockRecorder
}

// MockWordBookMockRecorder is the mock recorder for MockWordBook.
type MockWordBookMockRecorder struct {
	mock *MockWordBook
}

// NewMockWordBook creates a new mock instance.
func NewMockWordBook(ctrl *gomock.Controller) *MockWordBook {
	mock := &MockWordBook{ctrl: ctrl}
	mock.recorder = &MockWordBookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWordBook) EXPECT() *MockWordBookMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockWordBook) Get() Word {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(Word)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockWordBookMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWordBook)(nil).Get))
}
